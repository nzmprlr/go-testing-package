// Code generated by MockGen. DO NOT EDIT.
// Source: unit4.go
//
// Generated by this command:
//
//	mockgen -source=unit4.go -destination=./mocks/unit/unit4.gomock.go
//

// Package mock_unit is a generated GoMock package.
package mock_unit

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMultiplierService is a mock of MultiplierService interface.
type MockMultiplierService struct {
	ctrl     *gomock.Controller
	recorder *MockMultiplierServiceMockRecorder
}

// MockMultiplierServiceMockRecorder is the mock recorder for MockMultiplierService.
type MockMultiplierServiceMockRecorder struct {
	mock *MockMultiplierService
}

// NewMockMultiplierService creates a new mock instance.
func NewMockMultiplierService(ctrl *gomock.Controller) *MockMultiplierService {
	mock := &MockMultiplierService{ctrl: ctrl}
	mock.recorder = &MockMultiplierServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMultiplierService) EXPECT() *MockMultiplierServiceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockMultiplierService) Get() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(int)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockMultiplierServiceMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockMultiplierService)(nil).Get))
}
